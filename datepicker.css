/* Apply SF UI Text font globally */
body {
  font-family: -apple-system, BlinkMacSystemFont, "SF UI Text", "Segoe UI",
    "Roboto", "Helvetica", "Arial", sans-serif;
}

input {
  background-color: #ebeff0;
  color: #f8f8f8;
}

/* Ensure container takes up full width */
.container {
  width: 100% !important;
  box-sizing: border-box !important;
  display: block !important;
  margin: 0 auto !important;
  box-shadow: none !important;
}

.container > main {
  width: 100% !important;
}

.container.inline {
  display: flex !important;
  flex-direction: row !important;
}

.container.inline.amp-plugin.lock-plugin.range-plugin {
  width: 100% !important;
}

.container[data-theme="dark"] {
  --color-bg-default: transparent !important;
}

/* Ensure .calendars.grid-1 takes up full width */
.calendars.grid-1 {
  width: 100% !important;
  display: flex !important;
  flex-direction: row !important;
  justify-content: space-between !important;
  box-sizing: border-box !important;
}

/* .day unit styling */
.day.unit.not-available {
  background-color: transparent !important;
  color: #ccc !important;
  cursor: not-allowed !important;
  font-style: normal !important;
}

.calendar {
  width: 100% !important;
  background: transparent !important;
  display: flex !important;
  flex-direction: column !important;
  padding: 0 !important;
  font-family: "Gotham", sans-serif;
}

.calendars {
  display: flex !important;
  flex-direction: row !important;
  justify-content: space-between !important;
}

/* Styling for individual day cells */
.calendar > .days-grid .day {
  border-radius: 0.25rem !important;
  border: 0px !important;
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  justify-content: center !important;
  color: #ffffff !important;
  font-weight: 500 !important;
  font-size: 14px !important;
  max-height: 100% !important;
  max-width: 100% !important;
  text-align: center;
  font-family: "SF UI Text";
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
  aspect-ratio: 1 / 1 !important; /* Ensures squares for each element */
}

/* Target available day cells (without the .not-available class) */
.calendar > .days-grid > .day.unit:not(.not-available) {
  background-color: #303030 !important;
  color: #ffffff !important;
  font-weight: 700 !important;
  font-size: 16px !important;
  max-height: 100% !important;
  max-width: 100% !important;
  text-align: center;
  font-family: "SF UI Text";
  font-size: 0.875rem;
  font-style: normal;
  line-height: 25px;
}

/* Hover effect for a day */
.calendar > .days-grid > .day:hover {
  background-color: rgba(255, 255, 255, 0.6) !important;
  border: 0px !important;
  color: #ffffff !important;
}

.container.range-plugin .calendar > .days-grid > .day.end,
.container.range-plugin .calendar > .days-grid > .day.start {
  background-color: #0e42ff !important;
  color: #ffffff;
}

/* .container.range-plugin .calendar > .days-grid > .day.start {
  clip-path: polygon(0 0, 80% 0, 100% 50%, 80% 100%, 0 100%);
}

.container.range-plugin .calendar > .days-grid > .day.end {
  clip-path: polygon(0 0, 80% 0, 100% 50%, 80% 100%, 0 100%);
} */

/* Disable triangle created by ::after pseudo-element on both start and end */
.day.unit.start::after,
.day.unit.end::after {
  content: none !important; /* Removes any generated content */
  display: none !important; /* Hides the element */
}

/* Selected start and end days */
.calendar > .days-grid .day.selected.single,
.calendar > .days-grid .day.selected.start,
.calendar > .days-grid .day.selected.end {
  background-color: #0e42ff !important;
  color: #ffffff !important;
}

/* Styling for in-range days between start and end */
.calendar > .days-grid > .day.in-range {
  background-color: #404040 !important;
  color: #ffffff !important;
}

/* Ensure the in-range days are still styled when they're also available and unlocked */
.calendar > .days-grid > .day.unit.in-range:not(.not-available):not(.locked) {
  background-color: #404040 !important;
  color: #ffffff !important;
}

/* Styling for the .day-price inside .start and .end days */
.calendar > .days-grid > .day.unit.start .day-price,
.calendar > .days-grid > .day.unit.end .day-price {
  color: #ffffff !important;
}

/* Current day styling */
.calendar > .days-grid .day.today {
  background-color: transparent !important;
  color: #191919 !important;
  font-weight: 700 !important;
}

/* Set spacing between rows and columns in the date grid */
.days-grid {
  display: grid !important;
  grid-template-columns: repeat(7, minmax(40px, 1fr)) !important; /* Always 7 columns with responsive sizing */
  grid-auto-rows: 1fr !important;
  box-sizing: border-box !important;
  width: 100% !important;
  height: 100% !important;
  gap: 0.5rem !important;
  align-items: stretch !important;
}

/* Styling for each day cell */
.days-grid .day {
  width: 100% !important;
  height: 100% !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  font-size: 14px !important;
  background-color: transparent !important;
  color: #333 !important;
}

/* Calendar header layout */
.calendar > .header {
  display: flex !important;
  justify-content: space-between !important;
  align-items: center !important;
  width: 100% !important;
}

/* Month name should be centered */
.calendar > .header .month-name {
  flex-grow: 1; /* Takes up all available space */
  font-weight: 600 !important;
  font-size: 14px !important;
  color: #fff;
  text-align: center;
  font-family: "SF UI Text";
  font-size: 14px;
  font-style: normal;
  line-height: normal;
}

/* Pagination buttons on both sides */
.calendar > .header .previous-button,
.calendar > .header .next-button {
  text-align: center !important;
  color: #ffffffcc !important;
}

.container[data-theme=dark] .next-button {
  background-color: #ffffff00 !important;
  --color-fg-primary: white;
  fill: white;
  color: white;
}

.container[data-theme=dark] .next-button:hover {
  fill: white;
  color: white;
}

.container[data-theme=dark] .previous-button {
  background-color: #ffffff00 !important;
  --color-fg-primary: white;
  fill: white;
  color: white;
}

.container[data-theme=dark] .previous-button:hover {
  fill: white;
  color: white;
}


.calendar>.daynames-row, .calendar>.days-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 0.5rem !important;
    color: #ffffff !important;
}

.calendar>.daynames-row>.dayname {
    color: #ffffff !important;
    font-size: 14px !important;
    padding: 5px !important;
}

/* Ensure the previous button is on the left */
.calendar > .header .previous-button {
  order: -1; /* Moves the previous button to the left */
}

/* Ensure the next button is on the right */
.calendar > .header .next-button {
  order: 1; /* Keeps the next button on the right */
}

/* Remove background image for locked days */
.container.lock-plugin
  .calendar
  > .days-grid
  > .day.locked:not(.start):not(.end) {
  background-color: #191919 !important; /* Remove background image */
  opacity: 0.2 !important; /* Maintain the reduced opacity */
  pointer-events: none !important; /* Prevent interaction */
  font-style: normal !important; /* Remove italic styling */
}

/* Locked days with 20% opacity */
.day.locked {
  opacity: 0.2 !important; /* Set opacity to 20% */
  pointer-events: none !important; /* Prevent interaction */
  border: none !important; /* Remove any border (red lines) */
}

/* Ensure locked days with .not-available class maintain reduced opacity */
.day.locked.not-available {
  opacity: 0.2 !important; /* Set opacity to 20% */
  pointer-events: none !important; /* Prevent interaction */
  border: none !important; /* Remove any border */
}

/* Day price styling */
.calendar > .days-grid > .day .day-price {
  color: #3e6eff;
  text-align: center;
  font-family: "SF UI Text";
  font-size: 0.625rem;
  font-style: normal;
  font-weight: 300;
  line-height: normal;
}

/* Remove highlight for unavailable days */
.calendar > .days-grid > .day.not-available {
  background-color: transparent !important;
  color: rgba(255, 255, 255, 0.4) !important;
  pointer-events: none !important;
}